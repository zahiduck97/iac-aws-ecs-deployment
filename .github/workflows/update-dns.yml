name: Update ECS DNS

on:
  workflow_run:
    workflows: ["Build and Deploy"]
    types:
      - completed

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: devops-seed-cluster
  SERVICE_NAME: devops-seed-service
  DOMAIN_NAME: projects-zahid.com
  SUBDOMAIN: ecs-origin.projects-zahid.com

jobs:
  update-dns:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get ECS Task Public IP and update Route53
        run: |
          echo "Getting running ECS task..."
          TASK_ARN=$(aws ecs list-tasks \
            --cluster $CLUSTER_NAME \
            --service-name $SERVICE_NAME \
            --desired-status RUNNING \
            --query 'taskArns[0]' \
            --output text)

          if [ "$TASK_ARN" == "None" ] || [ -z "$TASK_ARN" ]; then
            echo "No running task found. Exiting."
            exit 1
          fi

          ENI_ID=$(aws ecs describe-tasks \
            --cluster $CLUSTER_NAME \
            --tasks $TASK_ARN \
            --query "tasks[0].attachments[0].details[?name=='networkInterfaceId'].value" \
            --output text)

          PUBLIC_IP=$(aws ec2 describe-network-interfaces \
            --network-interface-ids $ENI_ID \
            --query 'NetworkInterfaces[0].Association.PublicIp' \
            --output text)

          if [ "$PUBLIC_IP" == "None" ] || [ -z "$PUBLIC_IP" ]; then
            echo "Failed to get Public IP. Exiting."
            exit 1
          fi

          echo "Public IP: $PUBLIC_IP"

          echo "Creating change-batch.json"
          echo '{
            "Comment": "Update ECS origin to current public IP",
            "Changes": [{
              "Action": "UPSERT",
              "ResourceRecordSet": {
                "Name": "'"$SUBDOMAIN"'",
                "Type": "A",
                "TTL": 60,
                "ResourceRecords": [{ "Value": "'"$PUBLIC_IP"'" }]
              }
            }]
          }' > change-batch.json

          HOSTED_ZONE_ID=$(aws route53 list-hosted-zones-by-name \
            --dns-name $DOMAIN_NAME \
            --query 'HostedZones[0].Id' \
            --output text)

          aws route53 change-resource-record-sets \
            --hosted-zone-id $HOSTED_ZONE_ID \
            --change-batch file://change-batch.json
